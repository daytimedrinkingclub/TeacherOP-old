# app/models/answer_models.py
from ..extensions import db
from datetime import datetime
import uuid

# This table will store the answer to questions
class Answer(db.Model):
    __tablename__ = "answers"
    id = db.Column(db.String(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    question_id = db.Column(db.String(36), db.ForeignKey('questions.id'), nullable=False)
    student_id = db.Column(db.String(36), db.ForeignKey('students.id'), nullable=False)
    ai_mcq_answer = db.Column(db.Text, nullable=False)
    user_mcq_answer = db.Column(db.Text, nullable=False)
    ai_rich_answer = db.Column(db.Text, nullable=False)
    user_rich_answer = db.Column(db.Text, nullable=False)
    user_answer_data = db.Column(db.JSON, nullable=False)
    created_at = db.Column(db.DateTime, default=db.func.current_timestamp())
    updated_at = db.Column(db.DateTime, default=db.func.current_timestamp(), onupdate=db.func.current_timestamp())

    answer_analysis = db.relationship('AnswerAnalysis', backref='answer', lazy=True)

# This table will store the analysis of the answers generated by the AI
class AnswerAnalysis(db.Model):
    __tablename__ = "answer_analysis"
    id = db.Column(db.String(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    answer_id = db.Column(db.String(36), db.ForeignKey('answers.id'), nullable=False)
    answer_analysis = db.Column(db.JSON, nullable=False)
    created_at = db.Column(db.DateTime, default=db.func.current_timestamp())
    updated_at = db.Column(db.DateTime, default=db.func.current_timestamp(), onupdate=db.func.current_timestamp())